"""Unit cost column update

Revision ID: 9011ff7a6eee
Revises: 2fe973e19d04
Create Date: 2025-08-14 17:03:16.051646

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9011ff7a6eee'
down_revision: Union[str, Sequence[str], None] = '2fe973e19d04'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'boms', type_='foreignkey')
    op.drop_constraint(None, 'boms', type_='foreignkey')
    op.create_foreign_key('fk_Bomcomponent_item_id', 'boms', 'items', ['component_item_id'], ['item_id'])
    op.create_foreign_key('fk_items_item_id', 'boms', 'items', ['parent_item_id'], ['item_id'])
    op.drop_constraint(None, 'inventory_logs', type_='foreignkey')
    op.create_foreign_key(None, 'inventory_logs', 'items', ['item_id'], ['item_id'])
    op.add_column('inventory_transactions', sa.Column('unit_cost', sa.Float(), nullable=True))
    op.drop_constraint(None, 'inventory_transactions', type_='foreignkey')
    op.create_foreign_key('fk_inventory_transactions_item_id', 'inventory_transactions', 'items', ['item_id'], ['item_id'])
    op.alter_column('items', 'item_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=True)
    op.create_index(op.f('ix_items_item_id'), 'items', ['item_id'], unique=True)
    op.drop_constraint(None, 'items', type_='foreignkey')
    op.alter_column('production_operations', 'order_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('production_operations', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('production_orders', 'item_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint(None, 'production_orders', type_='foreignkey')
    op.create_foreign_key('fk_productions_orders_item_id', 'production_orders', 'items', ['item_id'], ['item_id'])
    op.drop_constraint(None, 'purchase_order_lines', type_='foreignkey')
    op.create_foreign_key('fk_purchase_order_lines_item_id', 'purchase_order_lines', 'items', ['item_id'], ['item_id'])
    op.add_column('transactions', sa.Column('unit_cost', sa.Float(), nullable=True))
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.create_foreign_key(None, 'transactions', 'items', ['item_id'], ['item_id'])
    op.drop_constraint(op.f('fk_uom_conversions_item_id_items'), 'uom_conversions', type_='foreignkey')
    op.create_foreign_key('fk_uom_conversions_item_id', 'uom_conversions', 'items', ['item_id'], ['item_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('fk_uom_conversions_item_id', 'uom_conversions', type_='foreignkey')
    op.create_foreign_key(op.f('fk_uom_conversions_item_id_items'), 'uom_conversions', 'items', ['item_id'], ['id'])
    op.drop_constraint(None, 'transactions', type_='foreignkey')
    op.create_foreign_key(None, 'transactions', 'items', ['item_id'], ['id'])
    op.drop_column('transactions', 'unit_cost')
    op.drop_constraint('fk_purchase_order_lines_item_id', 'purchase_order_lines', type_='foreignkey')
    op.create_foreign_key(None, 'purchase_order_lines', 'items', ['item_id'], ['id'])
    op.drop_constraint('fk_productions_orders_item_id', 'production_orders', type_='foreignkey')
    op.create_foreign_key(None, 'production_orders', 'items', ['item_id'], ['id'])
    op.alter_column('production_orders', 'item_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('production_operations', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('production_operations', 'order_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_foreign_key(None, 'items', 'items', ['item_id'], ['id'])
    op.drop_index(op.f('ix_items_item_id'), table_name='items')
    op.alter_column('items', 'item_id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=True)
    op.drop_constraint('fk_inventory_transactions_item_id', 'inventory_transactions', type_='foreignkey')
    op.create_foreign_key(None, 'inventory_transactions', 'items', ['item_id'], ['id'])
    op.drop_column('inventory_transactions', 'unit_cost')
    op.drop_constraint(None, 'inventory_logs', type_='foreignkey')
    op.create_foreign_key(None, 'inventory_logs', 'items', ['item_id'], ['id'])
    op.drop_constraint('fk_items_item_id', 'boms', type_='foreignkey')
    op.drop_constraint('fk_Bomcomponent_item_id', 'boms', type_='foreignkey')
    op.create_foreign_key(None, 'boms', 'items', ['parent_item_id'], ['id'])
    op.create_foreign_key(None, 'boms', 'items', ['component_item_id'], ['id'])
    # ### end Alembic commands ###
