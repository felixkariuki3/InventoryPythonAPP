"""Add unit_cost to inventory_transactions

Revision ID: 31c315fa8492
Revises: 01fb5f1bd3d7
Create Date: 2025-08-14 11:34:40.602858

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '31c315fa8492'
down_revision: Union[str, Sequence[str], None] = '01fb5f1bd3d7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('work_in_progress', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_work_in_progress_id'))

    op.drop_table('work_in_progress')
    with op.batch_alter_table('boms', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_Bomcomponent_item_id', 'items', ['component_item_id'], ['item_id'])
        batch_op.create_foreign_key('fk_items_item_id', 'items', ['parent_item_id'], ['item_id'])

    with op.batch_alter_table('inventory_logs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'items', ['item_id'], ['item_id'])

    with op.batch_alter_table('inventory_transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('unit_cost', sa.Float(), nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_inventory_transactions_item_id', 'items', ['item_id'], ['item_id'])

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_items_item_id'), ['item_id'], unique=True)
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('production_operations', schema=None) as batch_op:
        batch_op.alter_column('order_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=False)

    with op.batch_alter_table('production_orders', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_productions_orders_item_id', 'items', ['item_id'], ['item_id'])

    with op.batch_alter_table('purchase_order_lines', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_purchase_order_lines_item_id', 'items', ['item_id'], ['item_id'])

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'items', ['item_id'], ['item_id'])

    with op.batch_alter_table('uom_conversions', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_uom_conversions_item_id_items'), type_='foreignkey')
        batch_op.create_foreign_key('fk_uom_conversions_item_id', 'items', ['item_id'], ['item_id'])

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('uom_conversions', schema=None) as batch_op:
        batch_op.drop_constraint('fk_uom_conversions_item_id', type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('fk_uom_conversions_item_id_items'), 'items', ['item_id'], ['id'])

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'items', ['item_id'], ['id'])

    with op.batch_alter_table('purchase_order_lines', schema=None) as batch_op:
        batch_op.drop_constraint('fk_purchase_order_lines_item_id', type_='foreignkey')
        batch_op.create_foreign_key(None, 'items', ['item_id'], ['id'])

    with op.batch_alter_table('production_orders', schema=None) as batch_op:
        batch_op.drop_constraint('fk_productions_orders_item_id', type_='foreignkey')
        batch_op.create_foreign_key(None, 'items', ['item_id'], ['id'])
        batch_op.alter_column('item_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('production_operations', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('order_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'items', ['item_id'], ['id'])
        batch_op.drop_index(batch_op.f('ix_items_item_id'))
        batch_op.alter_column('item_id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=True)

    with op.batch_alter_table('inventory_transactions', schema=None) as batch_op:
        batch_op.drop_constraint('fk_inventory_transactions_item_id', type_='foreignkey')
        batch_op.create_foreign_key(None, 'items', ['item_id'], ['id'])
        batch_op.drop_column('unit_cost')

    with op.batch_alter_table('inventory_logs', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(None, 'items', ['item_id'], ['id'])

    with op.batch_alter_table('boms', schema=None) as batch_op:
        batch_op.drop_constraint('fk_items_item_id', type_='foreignkey')
        batch_op.drop_constraint('fk_Bomcomponent_item_id', type_='foreignkey')
        batch_op.create_foreign_key(None, 'items', ['parent_item_id'], ['id'])
        batch_op.create_foreign_key(None, 'items', ['component_item_id'], ['id'])

    op.create_table('work_in_progress',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('production_order_id', sa.INTEGER(), nullable=True),
    sa.Column('item_id', sa.INTEGER(), nullable=True),
    sa.Column('issued_quantity', sa.FLOAT(), nullable=True),
    sa.Column('cost_per_unit', sa.FLOAT(), nullable=False),
    sa.Column('total_cost', sa.FLOAT(), nullable=False),
    sa.Column('completed_quantity', sa.FLOAT(), nullable=True),
    sa.Column('status', sa.VARCHAR(), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], name=op.f('fk_wip_item')),
    sa.ForeignKeyConstraint(['production_order_id'], ['production_orders.id'], name=op.f('fk_wip_production_order')),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('work_in_progress', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_work_in_progress_id'), ['id'], unique=False)

    # ### end Alembic commands ###
