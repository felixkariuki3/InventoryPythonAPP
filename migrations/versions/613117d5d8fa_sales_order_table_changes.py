"""Sales Order table changes

Revision ID: 613117d5d8fa
Revises: 8231298d1181
Create Date: 2025-09-12 12:00:14.083863

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '613117d5d8fa'
down_revision: Union[str, Sequence[str], None] = '8231298d1181'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payments_customer_id'))
        batch_op.drop_index(batch_op.f('ix_payments_id'))

    op.drop_table('payments')
    with op.batch_alter_table('payment_allocations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_allocations_id'))
        batch_op.drop_index(batch_op.f('ix_payment_allocations_invoice_id'))
        batch_op.drop_index(batch_op.f('ix_payment_allocations_payment_id'))

    op.drop_table('payment_allocations')
    with op.batch_alter_table('credit_notes', schema=None) as batch_op:
        batch_op.alter_column('credit_date',
               existing_type=sa.DATETIME(),
               nullable=False)

    with op.batch_alter_table('delivery_notes', schema=None) as batch_op:
        batch_op.alter_column('delivery_date',
               existing_type=sa.DATETIME(),
               nullable=False)

    with op.batch_alter_table('sales_orders', schema=None) as batch_op:
        batch_op.add_column(sa.Column('due_date', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('sales_orders', schema=None) as batch_op:
        batch_op.drop_column('due_date')

    with op.batch_alter_table('delivery_notes', schema=None) as batch_op:
        batch_op.alter_column('delivery_date',
               existing_type=sa.DATETIME(),
               nullable=True)

    with op.batch_alter_table('credit_notes', schema=None) as batch_op:
        batch_op.alter_column('credit_date',
               existing_type=sa.DATETIME(),
               nullable=True)

    op.create_table('payment_allocations',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('payment_id', sa.INTEGER(), nullable=False),
    sa.Column('invoice_id', sa.INTEGER(), nullable=False),
    sa.Column('amount_applied', sa.FLOAT(), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['sales_invoices.id'], name=op.f('fk_palloc_invoice_id')),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], name=op.f('fk_palloc_payment_id')),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payment_allocations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payment_allocations_payment_id'), ['payment_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_allocations_invoice_id'), ['invoice_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_allocations_id'), ['id'], unique=False)

    op.create_table('payments',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('customer_id', sa.INTEGER(), nullable=False),
    sa.Column('payment_date', sa.DATETIME(), nullable=True),
    sa.Column('method', sa.VARCHAR(), nullable=False),
    sa.Column('reference', sa.VARCHAR(), nullable=True),
    sa.Column('amount', sa.FLOAT(), nullable=False),
    sa.Column('unallocated_amount', sa.FLOAT(), nullable=True),
    sa.Column('notes', sa.TEXT(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name=op.f('fk_pay_customer_id')),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payments_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_customer_id'), ['customer_id'], unique=False)

    # ### end Alembic commands ###
