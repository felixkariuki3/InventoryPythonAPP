"""updating the work_in_progress table

Revision ID: db9327c892ce
Revises: ce1ad27bc5d7
Create Date: 2025-07-31 11:44:06.921427

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'db9327c892ce'
down_revision: Union[str, Sequence[str], None] = 'ce1ad27bc5d7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('purchase_orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_purchase_orders_id'))

    op.drop_table('purchase_orders')
    with op.batch_alter_table('boms', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_boms_id'))

    op.drop_table('boms')
    with op.batch_alter_table('purchase_order_lines', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_purchase_order_lines_id'))

    op.drop_table('purchase_order_lines')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('purchase_order_lines',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('order_id', sa.INTEGER(), nullable=True),
    sa.Column('item_id', sa.INTEGER(), nullable=True),
    sa.Column('quantity', sa.FLOAT(), nullable=False),
    sa.Column('unit_cost', sa.FLOAT(), nullable=False),
    sa.Column('warehouse_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['order_id'], ['purchase_orders.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('purchase_order_lines', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_purchase_order_lines_id'), ['id'], unique=False)

    op.create_table('boms',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('parent_item_id', sa.INTEGER(), nullable=True),
    sa.Column('component_item_id', sa.INTEGER(), nullable=True),
    sa.Column('quantity', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['component_item_id'], ['items.id'], ),
    sa.ForeignKeyConstraint(['parent_item_id'], ['items.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('boms', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_boms_id'), ['id'], unique=False)

    op.create_table('purchase_orders',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('supplier_id', sa.VARCHAR(), nullable=False),
    sa.Column('order_date', sa.DATETIME(), nullable=True),
    sa.Column('status', sa.VARCHAR(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('purchase_orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_purchase_orders_id'), ['id'], unique=False)

    # ### end Alembic commands ###
