"""Issues fix

Revision ID: 3905ccedb1d5
Revises: f9dfd18c2b7b
Create Date: 2025-08-21 11:40:21.381415

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3905ccedb1d5'
down_revision: Union[str, Sequence[str], None] = 'f9dfd18c2b7b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_alembic_tmp_inventory_logs')
    with op.batch_alter_table('inventory_logs', schema=None) as batch_op:
        batch_op.alter_column('transaction_id',
               existing_type=sa.INTEGER(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
        batch_op.alter_column('timestamp',
               existing_type=sa.DATETIME(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.add_column(sa.Column('quantity', sa.Integer(), nullable=True))
        batch_op.alter_column('name',
               existing_type=sa.TEXT(),
               nullable=True)
        batch_op.alter_column('item_id',
               existing_type=sa.INTEGER(),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('production_operations', schema=None) as batch_op:
        batch_op.alter_column('order_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=False)

    with op.batch_alter_table('production_orders', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('start_date',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.alter_column('end_date',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DateTime(),
               existing_nullable=True)

    with op.batch_alter_table('purchase_order_lines', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('received_qty',
               existing_type=sa.FLOAT(),
               server_default=None,
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_purchase_order_lines_id'), ['id'], unique=False)
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key('fk_purchase_order_lines_item_id', 'items', ['item_id'], ['item_id'])
        batch_op.create_foreign_key('fk_purchase_order_lines_warehouses_id', 'warehouses', ['warehouse_id'], ['id'])
        batch_op.create_foreign_key('fk_purchase_order_lines_order_id', 'purchase_orders', ['order_id'], ['id'])

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.alter_column('unit_cost',
               existing_type=sa.NUMERIC(precision=12, scale=2),
               type_=sa.Float(),
               existing_nullable=True)
        batch_op.alter_column('timestamp',
               existing_type=sa.TIMESTAMP(),
               server_default=None,
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_transactions_id'), ['id'], unique=False)

    with op.batch_alter_table('uom_conversions', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.TEXT(),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_uom_conversions_id'), ['id'], unique=False)

    with op.batch_alter_table('work_in_progress', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('cost_per_unit',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('total_cost',
               existing_type=sa.FLOAT(),
               nullable=False)
        batch_op.alter_column('status',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_work_in_progress_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('work_in_progress', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_work_in_progress_id'))
        batch_op.alter_column('status',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('total_cost',
               existing_type=sa.FLOAT(),
               nullable=True)
        batch_op.alter_column('cost_per_unit',
               existing_type=sa.FLOAT(),
               nullable=True)
        batch_op.alter_column('item_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('uom_conversions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_uom_conversions_id'))
        batch_op.alter_column('item_id',
               existing_type=sa.Integer(),
               type_=sa.TEXT(),
               existing_nullable=True)

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transactions_id'))
        batch_op.alter_column('timestamp',
               existing_type=sa.DateTime(),
               server_default=sa.text('(CURRENT_TIMESTAMP)'),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('unit_cost',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=12, scale=2),
               existing_nullable=True)

    with op.batch_alter_table('purchase_order_lines', schema=None) as batch_op:
        batch_op.drop_constraint('fk_purchase_order_lines_order_id', type_='foreignkey')
        batch_op.drop_constraint('fk_purchase_order_lines_warehouses_id', type_='foreignkey')
        batch_op.drop_constraint('fk_purchase_order_lines_item_id', type_='foreignkey')
        batch_op.create_foreign_key(None, 'items', ['item_id'], ['item_id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'purchase_orders', ['order_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'warehouses', ['warehouse_id'], ['id'], onupdate='CASCADE', ondelete='CASCADE')
        batch_op.drop_index(batch_op.f('ix_purchase_order_lines_id'))
        batch_op.alter_column('received_qty',
               existing_type=sa.FLOAT(),
               server_default=sa.text('0'),
               existing_nullable=True)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('production_orders', schema=None) as batch_op:
        batch_op.alter_column('end_date',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('start_date',
               existing_type=sa.DateTime(),
               type_=sa.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('item_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('production_operations', schema=None) as batch_op:
        batch_op.alter_column('name',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('order_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('item_id',
               existing_type=sa.TEXT(),
               type_=sa.INTEGER(),
               existing_nullable=False)
        batch_op.alter_column('name',
               existing_type=sa.TEXT(),
               nullable=False)
        batch_op.drop_column('quantity')

    with op.batch_alter_table('inventory_logs', schema=None) as batch_op:
        batch_op.alter_column('timestamp',
               existing_type=sa.TIMESTAMP(),
               type_=sa.DATETIME(),
               existing_nullable=True)
        batch_op.alter_column('transaction_id',
               existing_type=sa.VARCHAR(),
               type_=sa.INTEGER(),
               existing_nullable=True)

    op.create_table('_alembic_tmp_inventory_logs',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('item_id', sa.INTEGER(), nullable=True),
    sa.Column('warehouse_id', sa.INTEGER(), nullable=True),
    sa.Column('transaction_id', sa.VARCHAR(), nullable=True),
    sa.Column('change', sa.FLOAT(), nullable=True),
    sa.Column('note', sa.VARCHAR(), nullable=True),
    sa.Column('timestamp', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], ),
    sa.ForeignKeyConstraint(['transaction_id'], ['transactions.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
