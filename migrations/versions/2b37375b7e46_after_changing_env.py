"""After changing env

Revision ID: 2b37375b7e46
Revises: c35358c7c38d
Create Date: 2025-08-27 08:33:11.268780

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2b37375b7e46'
down_revision: Union[str, Sequence[str], None] = 'c35358c7c38d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accounting_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('event_type', sa.String(), nullable=False),
    sa.Column('reference_id', sa.Integer(), nullable=False),
    sa.Column('reference_table', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('debit_account', sa.String(), nullable=True),
    sa.Column('credit_account', sa.String(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('accounting_events', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_accounting_events_id'), ['id'], unique=False)

    op.create_table('customers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('terms', sa.String(), nullable=True),
    sa.Column('credit_limit', sa.Float(), nullable=True),
    sa.Column('is_active', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_customers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_customers_name'), ['name'], unique=True)

    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('payment_date', sa.DateTime(), nullable=True),
    sa.Column('method', sa.String(), nullable=False),
    sa.Column('reference', sa.String(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('unallocated_amount', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='fk_pay_customer_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payments_customer_id'), ['customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payments_id'), ['id'], unique=False)

    op.create_table('sales_invoices',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('invoice_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('invoice_type', sa.String(), nullable=True),
    sa.Column('subtotal', sa.Float(), nullable=False),
    sa.Column('tax_total', sa.Float(), nullable=False),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='fk_si_customer_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sales_invoices', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sales_invoices_customer_id'), ['customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_invoices_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_invoices_status'), ['status'], unique=False)

    op.create_table('sales_orders',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('order_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('remarks', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='fk_sales_orders_customer_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sales_orders', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sales_orders_customer_id'), ['customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_orders_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_orders_status'), ['status'], unique=False)

    op.create_table('credit_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('credit_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('reference_invoice_id', sa.Integer(), nullable=True),
    sa.Column('subtotal', sa.Float(), nullable=False),
    sa.Column('tax_total', sa.Float(), nullable=False),
    sa.Column('total', sa.Float(), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='fk_cn_customer_id'),
    sa.ForeignKeyConstraint(['reference_invoice_id'], ['sales_invoices.id'], name='fk_cn_reference_invoice_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('credit_notes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_credit_notes_customer_id'), ['customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_notes_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_notes_status'), ['status'], unique=False)

    op.create_table('delivery_notes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sales_order_id', sa.Integer(), nullable=True),
    sa.Column('delivery_date', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('reference', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['sales_order_id'], ['sales_orders.id'], name='fk_dn_sales_order_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('delivery_notes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_delivery_notes_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_delivery_notes_status'), ['status'], unique=False)

    op.create_table('payment_allocations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('amount_applied', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['invoice_id'], ['sales_invoices.id'], name='fk_palloc_invoice_id'),
    sa.ForeignKeyConstraint(['payment_id'], ['payments.id'], name='fk_palloc_payment_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payment_allocations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payment_allocations_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_allocations_invoice_id'), ['invoice_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_allocations_payment_id'), ['payment_id'], unique=False)

    op.create_table('sales_adjustments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=True),
    sa.Column('adj_type', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('adj_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='fk_sadj_customer_id'),
    sa.ForeignKeyConstraint(['invoice_id'], ['sales_invoices.id'], name='fk_sadj_invoice_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sales_adjustments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sales_adjustments_customer_id'), ['customer_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_adjustments_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_adjustments_invoice_id'), ['invoice_id'], unique=False)

    op.create_table('sales_order_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('ordered_qty', sa.Float(), nullable=False),
    sa.Column('shipped_qty', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('tax_rate', sa.Float(), nullable=True),
    sa.Column('discount_rate', sa.Float(), nullable=True),
    sa.Column('warehouse_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], name='fk_sol_item_id'),
    sa.ForeignKeyConstraint(['order_id'], ['sales_orders.id'], name='fk_sol_order_id'),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name='fk_sol_warehouse_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sales_order_lines', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sales_order_lines_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_order_lines_item_id'), ['item_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_order_lines_order_id'), ['order_id'], unique=False)

    op.create_table('credit_note_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('credit_note_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('qty', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('tax_rate', sa.Float(), nullable=True),
    sa.Column('reason', sa.String(), nullable=True),
    sa.Column('warehouse_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['credit_note_id'], ['credit_notes.id'], name='fk_cnl_credit_note_id'),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], name='fk_cnl_item_id'),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name='fk_cnl_warehouse_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('credit_note_lines', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_credit_note_lines_credit_note_id'), ['credit_note_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_note_lines_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_credit_note_lines_item_id'), ['item_id'], unique=False)

    op.create_table('delivery_note_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('delivery_note_id', sa.Integer(), nullable=False),
    sa.Column('order_line_id', sa.Integer(), nullable=True),
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=True),
    sa.Column('qty_shipped', sa.Float(), nullable=False),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['delivery_note_id'], ['delivery_notes.id'], name='fk_dnl_delivery_note_id'),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], name='fk_dnl_item_id'),
    sa.ForeignKeyConstraint(['order_line_id'], ['sales_order_lines.id'], name='fk_dnl_order_line_id'),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name='fk_dnl_warehouse_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('delivery_note_lines', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_delivery_note_lines_delivery_note_id'), ['delivery_note_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_delivery_note_lines_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_delivery_note_lines_item_id'), ['item_id'], unique=False)

    op.create_table('sales_invoice_lines',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.String(), nullable=False),
    sa.Column('qty', sa.Float(), nullable=False),
    sa.Column('unit_price', sa.Float(), nullable=False),
    sa.Column('unit_cost', sa.Float(), nullable=True),
    sa.Column('tax_rate', sa.Float(), nullable=True),
    sa.Column('discount_rate', sa.Float(), nullable=True),
    sa.Column('warehouse_id', sa.Integer(), nullable=True),
    sa.Column('so_line_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['invoice_id'], ['sales_invoices.id'], name='fk_sil_invoice_id'),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], name='fk_sil_item_id'),
    sa.ForeignKeyConstraint(['so_line_id'], ['sales_order_lines.id'], name='fk_sil_so_line_id'),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], name='fk_sil_warehouse_id'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sales_invoice_lines', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sales_invoice_lines_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_invoice_lines_invoice_id'), ['invoice_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_sales_invoice_lines_item_id'), ['item_id'], unique=False)

    op.create_table('stock_reservations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sales_order_line_id', sa.Integer(), nullable=False),
    sa.Column('item_id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('reserved_qty', sa.Float(), nullable=False),
    sa.Column('released_qty', sa.Float(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['items.item_id'], ),
    sa.ForeignKeyConstraint(['sales_order_line_id'], ['sales_order_lines.id'], ),
    sa.ForeignKeyConstraint(['warehouse_id'], ['warehouses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('stock_reservations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_stock_reservations_id'), ['id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('stock_reservations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_stock_reservations_id'))

    op.drop_table('stock_reservations')
    with op.batch_alter_table('sales_invoice_lines', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_invoice_lines_item_id'))
        batch_op.drop_index(batch_op.f('ix_sales_invoice_lines_invoice_id'))
        batch_op.drop_index(batch_op.f('ix_sales_invoice_lines_id'))

    op.drop_table('sales_invoice_lines')
    with op.batch_alter_table('delivery_note_lines', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_delivery_note_lines_item_id'))
        batch_op.drop_index(batch_op.f('ix_delivery_note_lines_id'))
        batch_op.drop_index(batch_op.f('ix_delivery_note_lines_delivery_note_id'))

    op.drop_table('delivery_note_lines')
    with op.batch_alter_table('credit_note_lines', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_credit_note_lines_item_id'))
        batch_op.drop_index(batch_op.f('ix_credit_note_lines_id'))
        batch_op.drop_index(batch_op.f('ix_credit_note_lines_credit_note_id'))

    op.drop_table('credit_note_lines')
    with op.batch_alter_table('sales_order_lines', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_order_lines_order_id'))
        batch_op.drop_index(batch_op.f('ix_sales_order_lines_item_id'))
        batch_op.drop_index(batch_op.f('ix_sales_order_lines_id'))

    op.drop_table('sales_order_lines')
    with op.batch_alter_table('sales_adjustments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_adjustments_invoice_id'))
        batch_op.drop_index(batch_op.f('ix_sales_adjustments_id'))
        batch_op.drop_index(batch_op.f('ix_sales_adjustments_customer_id'))

    op.drop_table('sales_adjustments')
    with op.batch_alter_table('payment_allocations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_allocations_payment_id'))
        batch_op.drop_index(batch_op.f('ix_payment_allocations_invoice_id'))
        batch_op.drop_index(batch_op.f('ix_payment_allocations_id'))

    op.drop_table('payment_allocations')
    with op.batch_alter_table('delivery_notes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_delivery_notes_status'))
        batch_op.drop_index(batch_op.f('ix_delivery_notes_id'))

    op.drop_table('delivery_notes')
    with op.batch_alter_table('credit_notes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_credit_notes_status'))
        batch_op.drop_index(batch_op.f('ix_credit_notes_id'))
        batch_op.drop_index(batch_op.f('ix_credit_notes_customer_id'))

    op.drop_table('credit_notes')
    with op.batch_alter_table('sales_orders', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_orders_status'))
        batch_op.drop_index(batch_op.f('ix_sales_orders_id'))
        batch_op.drop_index(batch_op.f('ix_sales_orders_customer_id'))

    op.drop_table('sales_orders')
    with op.batch_alter_table('sales_invoices', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_invoices_status'))
        batch_op.drop_index(batch_op.f('ix_sales_invoices_id'))
        batch_op.drop_index(batch_op.f('ix_sales_invoices_customer_id'))

    op.drop_table('sales_invoices')
    with op.batch_alter_table('payments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payments_id'))
        batch_op.drop_index(batch_op.f('ix_payments_customer_id'))

    op.drop_table('payments')
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customers_name'))
        batch_op.drop_index(batch_op.f('ix_customers_id'))

    op.drop_table('customers')
    with op.batch_alter_table('accounting_events', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_accounting_events_id'))

    op.drop_table('accounting_events')
    # ### end Alembic commands ###
